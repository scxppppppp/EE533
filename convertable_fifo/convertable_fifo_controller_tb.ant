////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2003 Xilinx, Inc.
// All Right Reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 10.1.03
//  \   \         Application : ISE
//  /   /         Filename : convertable_fifo_controller_tb.ant
// /___/   /\     Timestamp : Sat Mar 12 17:01:44 2022
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: 
//Design Name: convertable_fifo_controller_tb
//Device: Xilinx
//
`timescale 1ns/1ps

module convertable_fifo_controller_tb;
    reg [63:0] in_data = 64'b0000000000000000000000000000000000000000000000000000000000000000;
    reg [7:0] in_ctrl = 8'b00000000;
    reg in_wr = 1'b0;
    wire in_rdy;
    wire [63:0] out_data;
    wire [7:0] out_ctrl;
    wire out_wr;
    reg out_rdy = 1'b0;
    reg [63:0] cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000000000000000;
    reg [63:0] cpu_din = 64'b0000000000000000000000000000000000000000000000000000000000000000;
    reg cpu_wen = 1'b0;
    wire [63:0] cpu_dout;
    reg reset = 1'b0;
    reg clk = 1'b0;

    parameter PERIOD = 200;
    parameter real DUTY_CYCLE = 0.5;
    parameter OFFSET = 100;

    initial    // Clock process for clk
    begin
        #OFFSET;
        forever
        begin
            clk = 1'b0;
            #(PERIOD-(PERIOD*DUTY_CYCLE)) clk = 1'b1;
            #(PERIOD*DUTY_CYCLE);
        end
    end

    convertable_fifo_controller UUT (
        .in_data(in_data),
        .in_ctrl(in_ctrl),
        .in_wr(in_wr),
        .in_rdy(in_rdy),
        .out_data(out_data),
        .out_ctrl(out_ctrl),
        .out_wr(out_wr),
        .out_rdy(out_rdy),
        .cpu_addr_in(cpu_addr_in),
        .cpu_din(cpu_din),
        .cpu_wen(cpu_wen),
        .cpu_dout(cpu_dout),
        .reset(reset),
        .clk(clk));

    integer TX_FILE = 0;
    integer TX_ERROR = 0;
    
    initial begin    // Annotation process for clock clk
        #0;
        ANNOTATE_in_rdy;
        ANNOTATE_out_data;
        ANNOTATE_out_ctrl;
        ANNOTATE_out_wr;
        ANNOTATE_cpu_dout;
        #OFFSET;
        forever begin
            #100;
            ANNOTATE_in_rdy;
            ANNOTATE_out_data;
            ANNOTATE_out_ctrl;
            ANNOTATE_out_wr;
            ANNOTATE_cpu_dout;
            #100;
        end
    end

    initial begin  // Open the annotations file...
        TX_FILE = $fopen("/home/ise/sf/ee533_cpu/convertable_fifo/convertable_fifo_controller_tb.ano");
        #8700 // Final time:  8700 ns
        $display("Success! Annotation Simulation Complete.");
        $fdisplay(TX_FILE, "Total[%d]", TX_ERROR);
        $fclose(TX_FILE);
        $finish;
    end

    initial begin
        // -------------  Current Time:  200ns
        #200;
        reset = 1'b1;
        // -------------------------------------
        // -------------  Current Time:  400ns
        #200;
        out_rdy = 1'b1;
        reset = 1'b0;
        in_data = 64'b0000000000000000000000000000000000000000000000000000000000000001;
        // -------------------------------------
        // -------------  Current Time:  600ns
        #200;
        in_wr = 1'b1;
        in_data = 64'b0000000000000000000000000000000000000000000000000000000000000011;
        // -------------------------------------
        // -------------  Current Time:  800ns
        #200;
        in_data = 64'b0000000000000000000000000000000000000000000000000000000000000111;
        in_ctrl = 8'b00000111;
        // -------------------------------------
        // -------------  Current Time:  1000ns
        #200;
        in_data = 64'b0000000000000000000000000000000000000000000000000000000000001111;
        // -------------------------------------
        // -------------  Current Time:  1200ns
        #200;
        in_data = 64'b0000000000000000000000000000000000000000000000000000000000011111;
        in_ctrl = 8'b00000000;
        // -------------------------------------
        // -------------  Current Time:  1400ns
        #200;
        in_data = 64'b0000000000000000000000000000000000000000000000000000000000111111;
        // -------------------------------------
        // -------------  Current Time:  1600ns
        #200;
        in_wr = 1'b0;
        in_data = 64'b0000000000000000000000000000000000000000000000000000000001111111;
        // -------------------------------------
        // -------------  Current Time:  1800ns
        #200;
        in_wr = 1'b1;
        in_data = 64'b0000000000000000000000000000000000000000000000000000000011111111;
        // -------------------------------------
        // -------------  Current Time:  2000ns
        #200;
        in_data = 64'b0000000000000000000000000000000000000000000000000000000111111111;
        // -------------------------------------
        // -------------  Current Time:  2200ns
        #200;
        in_data = 64'b0000000000000000000000000000000000000000000000000000001111111111;
        // -------------------------------------
        // -------------  Current Time:  2400ns
        #200;
        in_data = 64'b0000000000000000000000000000000000000000000000000000011111111111;
        // -------------------------------------
        // -------------  Current Time:  2600ns
        #200;
        in_data = 64'b0000000000000000000000000000000000000000000000000000111111111111;
        in_ctrl = 8'b00000001;
        // -------------------------------------
        // -------------  Current Time:  2800ns
        #200;
        in_data = 64'b0000000000000000000000000000000000000000000000000001111111111111;
        // -------------------------------------
        // -------------  Current Time:  3000ns
        #200;
        in_data = 64'b0000000000000000000000000000000000000000000000000011111111111111;
        in_ctrl = 8'b00000000;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000110000000000;
        // -------------------------------------
        // -------------  Current Time:  3200ns
        #200;
        in_data = 64'b0000000000000000000000000000000000000000000000000111111111111111;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000000000000001;
        // -------------------------------------
        // -------------  Current Time:  3400ns
        #200;
        in_data = 64'b0000000000000000000000000000000000000000000000001111111111111111;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000100000000000;
        // -------------------------------------
        // -------------  Current Time:  3600ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000101000000000;
        // -------------------------------------
        // -------------  Current Time:  3800ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000000000000000;
        // -------------------------------------
        // -------------  Current Time:  4000ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000000000000001;
        // -------------------------------------
        // -------------  Current Time:  4200ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000000000000010;
        // -------------------------------------
        // -------------  Current Time:  4400ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000000000000011;
        // -------------------------------------
        // -------------  Current Time:  4600ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000000000000100;
        // -------------------------------------
        // -------------  Current Time:  4800ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000000000000101;
        // -------------------------------------
        // -------------  Current Time:  5000ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000000000000110;
        // -------------------------------------
        // -------------  Current Time:  5200ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000000000000111;
        // -------------------------------------
        // -------------  Current Time:  5400ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000000000001000;
        // -------------------------------------
        // -------------  Current Time:  5600ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000001000000000;
        // -------------------------------------
        // -------------  Current Time:  5800ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000001000000001;
        // -------------------------------------
        // -------------  Current Time:  6000ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000001000000010;
        // -------------------------------------
        // -------------  Current Time:  6200ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000001000000011;
        // -------------------------------------
        // -------------  Current Time:  6400ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000001000000100;
        // -------------------------------------
        // -------------  Current Time:  6600ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000001000000101;
        // -------------------------------------
        // -------------  Current Time:  6800ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000001000000110;
        // -------------------------------------
        // -------------  Current Time:  7000ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000001000000111;
        // -------------------------------------
        // -------------  Current Time:  7200ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000001000001000;
        // -------------------------------------
        // -------------  Current Time:  7400ns
        #200;
        cpu_wen = 1'b1;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000001000000011;
        cpu_din = 64'b0000000000000000000000000000000000000000000000000000000000000111;
        // -------------------------------------
        // -------------  Current Time:  7600ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000100000000000;
        cpu_din = 64'b0000000000000000000000000000000000000000000000000000000000000011;
        // -------------------------------------
        // -------------  Current Time:  7800ns
        #200;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000111000000000;
        cpu_din = 64'b0000000000000000000000000000000000000000000000000000000000000001;
        // -------------------------------------
        // -------------  Current Time:  8000ns
        #200;
        cpu_wen = 1'b0;
        cpu_addr_in = 64'b0000000000000000000000000000000000000000000000000000000000010000;
        // -------------------------------------
    end

    task ANNOTATE_in_rdy;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,in_rdy,%b]", $time, in_rdy);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_out_data;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,out_data,%b]", $time, out_data);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_out_ctrl;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,out_ctrl,%b]", $time, out_ctrl);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_out_wr;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,out_wr,%b]", $time, out_wr);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_cpu_dout;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,cpu_dout,%b]", $time, cpu_dout);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

endmodule

